@inject ITaskServiceClient TaskService
@inject IToaster Toaster

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Task" Class="mb-1" />
            New Task - @project.Number @project.Name
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm>
            <MudTextField T="string" Label="Title" Required="true" Variant="Variant.Filled" @bind-Value="task.Title" />
            <MudTextField T="string" Label="Description" Lines="4" Required="true" Variant="Variant.Filled" @bind-Value="task.Description" />
            <MudSelect Dense="true" T="int?" Label="Assigned To?" Variant="Variant.Filled" AnchorOrigin="Origin.BottomCenter" @bind-Value="task.AssignedToId">
                @foreach (var feline in felines)
                {
                    <MudSelectItem T="int?" Value="@feline">@feline</MudSelectItem>
                }
            </MudSelect>
            <MudDatePicker Culture="@CultureInfo.GetCultureInfo("pl-pl")" Label="Deadline" Variant="Variant.Filled" DisableToolbar="true" @bind-Date="task.DeadlineDate" />
            <MudSelect Dense="true" T="string" Label="Priority" Variant="Variant.Filled" AnchorOrigin="Origin.BottomCenter" @bind-Value="task.Priority">
                @foreach (var level in priorityLevels)
                {
                    <MudSelectItem T="string" Value="@level">@level</MudSelectItem>
                }
            </MudSelect>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudSpacer />
        <MudButton Color="Color.Success" Variant="Variant.Filled" OnClick="Submit">Add</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public TaskItem task { get; set; } = new TaskItem();
    [Parameter] public Project project { get; set; } = new Project();

    private int[] felines =
    {
        8,9,10,11
    };

    private string[] priorityLevels =
    {
        "Low", "Medium", "High"
    };

    void Cancel() => MudDialog.Cancel();

    private async Task Submit()
    {
        task.ProjectId = project.ProjectId;
        var result = await TaskService.PostTask(task);
        if (result.Success == true)
        {
            Toaster.Success(result.Message);
        }
        else
        {
            Toaster.Error(result.Message);
        }
        ;
        MudDialog.Close(DialogResult.Ok(true));
    }
}
