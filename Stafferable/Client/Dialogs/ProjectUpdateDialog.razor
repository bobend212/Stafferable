@inject IProjectServiceClient ProjectService
@inject IToaster Toaster

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Edit" Class="mb-1" />
            Update Project - @project.Number @project.Name
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm>
            <MudTextField T="int" Label="Number" Required="true" Variant="Variant.Filled" @bind-Value="project.Number" Mask="@(new PatternMask("00000"))" />
            <MudTextField T="string" Label="Name" Required="true" Variant="Variant.Filled" @bind-Value="project.Name" />
            <MudSelect Dense="true" T="string" Label="Status" Variant="Variant.Filled" AnchorOrigin="Origin.BottomCenter" @bind-Value="project.Status">
                @foreach (var status in statuses)
                {
                    <MudSelectItem T="string" Value="@status">@status</MudSelectItem>
                }
            </MudSelect>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudSpacer />
        <MudButton Color="Color.Warning" Variant="Variant.Filled" OnClick="Submit">Update</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public Project project { get; set; } = new Project();

    private string[] statuses =
    {
        "New", "Active", "Cancelled", "On Hold", "Done"
    };

    void Cancel() => MudDialog.Cancel();

    private async Task Submit()
    {
        await ProjectService.UpdateProject(project);
        Toaster.Success("Project Updated");
        MudDialog.Close(DialogResult.Ok(true));
    }
}
